mean.steps.day
median.steps.day <- median(tot.steps.day$tot.steps, na.rm = TRUE)
median.steps.day
head(data)
int.mean < - data %>%
group_by(interval) %>%
summarise(mean.steps = mean(steps, na.rm = TRUE))
int.mean <- data %>%
group_by(interval) %>%
summarise(mean.steps = mean(steps, na.rm = TRUE))
View(int.mean)
geom_line()
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line()
filter(int.mean, max(int.mean$mean.steps))
?filter
filter(int.mean, max(mean.steps))
filter(int.mean, mean.steps == max(mean.steps))
max.int.steps <- filter(int.mean, mean.steps == max(mean.steps))
max.int.steps <- filter(int.mean, mean.steps == max(mean.steps))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line()
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
abline(mean(mean.steps))
View(int.mean)
?abline
?line
?geom
?ggplot
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = 'mean'))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps)))
?geom_text
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(label = 'mean')
?geom_text
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 40, label = 'mean')
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 40, label = 'mean'))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps)))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 40, label = 'mean'))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 45, label = 'mean'))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 45, label = 'mean', color = 'NA'))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 45, label = 'mean', color = 'NA*'))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 45, label = 'mean', size = 12))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 45, label = 'mean')
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 45, label = 'mean'))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 45, label = 'mean'))
?geom_text
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 45, size = 10, label = 'mean'))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 45, size = 16, label = 'mean'))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 45, size = 16, label = 'mean'))
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(4, 45, label = 'mean'))
?geom_text
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
geom_text(aes(x = 4, y = 45, label = 'mean'))
?annotate
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line() +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean')
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line(aes(color = mean.steps)) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean')
?geom_line
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line(aes(color = mean.steps, size = 4)) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean')
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line(aes(color = mean.steps, size = 2)) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean')
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line(aes(color = mean.steps, size = 2)) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean')
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line(aes(color = mean.steps, size = 1)) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean')
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line(aes(color = mean.steps), size = 2) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean')
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line(aes(color = mean.steps), size = 1) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean')
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line(aes(color = mean.steps), size = 1.4) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean')
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
theme(panel.background = element_rect('white')) +
geom_line(aes(color = mean.steps), size = 1.4) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean')
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
geom_line(aes(color = mean.steps), size = 1.4) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean')
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
theme(legend.position = 'none') +
geom_line(aes(color = mean.steps), size = 1.4) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean')
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
theme(legend.position = 'none') +
geom_line(aes(color = mean.steps), size = 1.4) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean') +
labs(title = 'Mean Steps Per Interval')
!complete.cases(data)
sum(!complete.cases(data))
head(data)
is.na(data$steps)
sum(is.na(data$steps))
del <- int.mean
del <- data
View(del)
del$steps[is.na(del$steps)] <- mean(del$steps)
!complete.cases(del)
del <- data
del$steps[is.na(del$steps)] <- mean(del$steps)
complete.cases(del)
del$steps[is.na(del$steps)] <- mean(del$steps, na.rm = TRUE)
complete.cases(del)
View(int.mean)
del$steps[is.na(del$steps)] <- mean(int.mean$interval[del$interval == int.mean$interval], na.rm = TRUE)
View(del)
del$steps[is.na(del$steps)] <- mean(int.mean$steps[del$interval == int.mean$interval], na.rm = TRUE)
install.packages('mice')
install.packages('mice') ; library('mice')
install.packages('mice')library('mice')
library('mice')
?mice
delm <- mice(del)
delm <- mice(del$steps)
?mice
delm <- mice(del)
del
del <- data
delm <- mice(del)
delm
data$steps[is.na(data$steps)] <- median(data$steps, na.rm = TRUE)
complete.cases(data)
sumc(complete.cases(data))
sum(complete.cases(data))
sum(!complete.cases(data))
data2 <-data
data2$steps[is.na(data2$steps)] <- median(data2$steps, na.rm = TRUE)
sum(!complete.cases(data2)) ## there are 2,304 entries with NAs
sum(!complete.cases(data2)) ## 0 NA's now
max <- data
library(Hmisc)
?ddply
help(package = 'dplyr')
library('plyr')
?ddply
detach("package:plyr", unload=TRUE)
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?mutate_each
max1 <- max %>%
group_by(interval) %>%
mutate_each(funs(mean = mean(., na.rm = TRUE)), contains('.'))
View(max1)
View(max1)
View(max)
max1 <- max %>%
group_by(interval) %>%
mutate_each(funs(mean = mean(interval, na.rm = TRUE))
max1 <- max %>%
group_by(interval) %>%
mutate_each(funs(mean = mean(interval, na.rm = TRUE)))
data3 <- data
data3 <- left_join(data3, int.mean, by = 'interval')
View(data3)
View(data)
data3$steps[data3$steps == 0] <- NA
is.na(data3$steps)
sum(is.na(data3$steps))
data3 <- data
is.na(data3$steps)
sum(is.na(data3$steps))
data <- read.csv('activity.csv')
sum(is.na(data3$steps))
!complete.cases(data)
sum(!complete.cases(data))
length(data)
nrow(data)
sum(!complete.cases(data2)) ## there are 2,304 entries with NAs
data2 <-data
sum(!complete.cases(data2)) ## there are 2,304 entries with NAs
sum(!complete.cases(data))
sum(!complete.cases(data2)) ## there are 2,304 entries with NAs
data2$steps[is.na(data2$steps)] <- median(data2$steps, na.rm = TRUE)
sum(!complete.cases(data2)) ## 0 NA's now
data3 <- data
sum(!complete.cases(data))
nrow(data)
sum(is.na(data3$steps))
data3 <- left_join(data3, int.mean, by = 'interval')
which(data3$steps[data3$steps == NA])
which(data3$steps[data3$steps == 'NA'])
?which
which(data3$steps == NA)
which(data3$steps == is.na(data3$steps))
sum(which(data3$steps == is.na(data3$steps)))
length(which(data3$steps == is.na(data3$steps)))
data3$steps[which(is.na(data3$steps))]
View(data3)
data2 <-data
sum(!complete.cases(data2)) ## there are 2,304 entries with NAs
data2$steps[is.na(data2$steps)] <- median(data2$steps, na.rm = TRUE)
sum(!complete.cases(data2)) ## 0 NA's now
data3 <- data
sum(!complete.cases(data))
data3 <- left_join(data3, int.mean, by = 'interval')
View(data3)
View(data)
data3$steps[which(is.na())]
data3$steps[which(is.na(data$steps))]
x<-data3$steps[which(is.na(data$steps))]
x<-data3$steps[which(!is.na(data$steps))]
x
x<-data3$steps[which()]
x<-which(is.na(data3$steps))
x
which(is.na(data3$steps))
data(iris)
head(iris)
iris$Sepal.Length[iris$Species == 'setosa'] <- NA
head(iris)
is.na(iris$Sepal.Length)
data3$steps[which(is.na(data3$steps))] <- data3$mean.steps[is.na(data3$steps)]
sum(is.na(data3$steps))
View(data3)
ggplot(int.mean, aes(x = interval, y = mean.steps)) +
theme(legend.position = 'none') +
geom_line(aes(color = mean.steps), size = 1.4) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean') +
labs(title = 'Mean Steps Per Interval')
plot2 <- ggplot(int.mean, aes(x = interval, y = mean.steps)) +
theme(legend.position = 'none') +
geom_line(aes(color = mean.steps), size = 1.4) +
geom_hline(aes(yintercept = mean(int.mean$mean.steps))) +
annotate('text', x = 4, y = 45, label = 'mean') +
labs(title = 'Mean Steps Per Interval')
plot1 <- ggplot(data, aes(x = date, y = steps)) +
geom_histogram(stat = 'identity') +
labs(title = "Steps Per Day", x = 'Date', y = 'Number of Steps') +
theme(axis.text.x = element_text(angle = 90))
ggplot(data3, aes(x = date, y = steps)) +
geom_histogram(stat = 'identity') +
labs(title = "Steps Per Day", x = 'Date', y = 'Number of Steps') +
theme(axis.text.x = element_text(angle = 90))
plot4 <- ggplot(data3, aes(x = date, y = steps)) +
geom_histogram(stat = 'identity') +
labs(title = "Steps Per Day", x = 'Date', y = 'Number of Steps') +
theme(axis.text.x = element_text(angle = 90))
View(data3)
ggplot(tot.steps.day, aes(x = date, y = tot.steps)) +
goem_historgram(stat = 'identity')
ggplot(tot.steps.day, aes(x = date, y = tot.steps)) +
geom_historgram(stat = 'identity')
ggplot(tot.steps.day, aes(x = date, y = tot.steps)) +
geom_histogram(stat = 'identity')
plot1
ggplot(tot.steps.day, aes(x = date, y = tot.steps)) +
geom_histogram(stat = 'identity')
plot4 <- ggplot(data3, aes(x = date, y = steps)) +
geom_histogram(stat = 'identity') +
labs(title = "Steps Per Day", x = 'Date', y = 'Number of Steps') +
theme(axis.text.x = element_text(angle = 90))
plot4
tot.steps.day.data3 <- data3 %>%
group_by(date) %>%
summarise(tot.steps = sum(steps))
mean(tot.steps.day.data3$tot.steps)
median(tot.steps.day.data3$tot.steps)
imp.mean <- mean(tot.steps.day.data3$tot.steps)
imp. median <-median(tot.steps.day.data3$tot.steps)
mean.steps.day
imp.mean
imp.median
imp. median <-median(tot.steps.day.data3$tot.steps)
imp.median <-median(tot.steps.day.data3$tot.steps)
imp.median
View(tot.steps.day)
View(tot.steps.day.data3)
data3 <- data
data3 <- left_join(data3, int.mean, by = 'interval')
data3$steps[which(is.na(data3$steps))] <- data3$mean.steps[is.na(data3$steps)]
plot4 <- ggplot(data3, aes(x = date, y = steps)) +
geom_histogram(stat = 'identity') +
labs(title = "Steps Per Day", x = 'Date', y = 'Number of Steps') +
theme(axis.text.x = element_text(angle = 90))
tot.steps.day.data3 <- data3 %>%
group_by(date) %>%
summarise(tot.steps = sum(steps))
imp.mean <- mean(tot.steps.day.data3$tot.steps)
imp.median <-median(tot.steps.day.data3$tot.steps)
data <- read.csv('activity.csv')
## part 1: plot steps per day
plot1 <- ggplot(data, aes(x = date, y = steps)) +
geom_histogram(stat = 'identity') +
labs(title = "Steps Per Day", x = 'Date', y = 'Number of Steps') +
theme(axis.text.x = element_text(angle = 90))
## rearrange data for calculations
tot.steps.day <- data %>%
group_by(date) %>%
summarise(tot.steps = sum(steps))
## mean calculation
mean.steps.day <- mean(tot.steps.day$tot.steps, na.rm = TRUE)
## mean calculation
mean.steps.day <- mean(tot.steps.day$tot.steps, na.rm = TRUE)
## median calculation
median.steps.day <- median(tot.steps.day$tot.steps, na.rm = TRUE)
sum(data$steps)
sum(data$steps, na.rm = TRUE)
sum(data3$steps)
data.steps.sum <- sum(data$steps, na.rm = TRUE)
data3.steps.sum <- sum(data3$steps)
?weekdays
weekdays(data3$steps)[1:3,]
weekdays(data3$steps)[1:3]
str(data3)
weekdays(data3$date)[1:3]
?weekdays
str(data3)
library('lubridate')
weekdays(data3$date)[1:3]
data4 <- data3
data4$date <- ymd(data4$date)
str(data4)
head(data4)
?ymd
data4$date <- as.POSIXct(data4$date)
data4 <- data3
data4$date <- as.POSIXct(data4$date)
head(data4)
View(data4)
data4$wday <- wday(data4$date, label = TRUE)
View(data4)
data4$wday[wday == 'Sat' | wday == 'Sun']
data4$wday['Sat' | 'Sun']
data4$wday[1]
weekd <- c('Mon', 'Tues', 'Wed', 'Thu', 'Fri')
View(data4)
weekd <- c('Mon', 'Tues', 'Wed', 'Thurs', 'Fri')
data4$weekend[data4$wday != weekd] <- 1
data4$weekend[which(data4$wday != weekd)] <- 1
data4$weekend[which(data4$wday == weekd)] <- 1
data4$date != weekd
sum(data4$date != weekd)
data4$wday[3]
data4$wday[900]
as.integer(data4$wday[900])
data4 <- data3
data4$date <- as.POSIXct(data4$date)
weekd <- c('Mon', 'Tues', 'Wed', 'Thurs', 'Fri')
data4$wday <- wday(data4$date)
View(data4)
which(data4$wday >5)
length(which(data4$wday >5))
length(which(data4$wday <= 5))
data4$weekend[which(data4$wday > 5)] = 1
View(data4)
sum(data4$weekend == 1)
data4$weekend <- data4$weekend[which(data4$wday > 5)] = 1
data4$weekend[which(data4$wday > 5)]
data4$weekend[which(data4$wday > 5)] = 1
View(data4)
data4$weekend[which(data4$wday < 5)] = 1
View(data4)
data4$weekend[which(data4$wday > 5)] = 1
is.na(data4$weekend) <- 0
View(data4)
data4 <- data3
data4$date <- as.POSIXct(data4$date)
data4$wday <- wday(data4$date)
length(which(data4$wday >5))
length(which(data4$wday <= 5))
data4$weekend[which(data4$wday > 5)] = 1
View(data4)
is.na(data4$weekend) <- 0
View(data4)
data4$weekend[is.na(data4$weekend)] <- 0
View(data4)
data4$weekend[which(data4$wday > 5)] <- 1
data4$weekend[is.na(data4$weekend)] <- 0
data4$week.cat[which(data4$wday > 5)] <- 'weekend'
data4$week.cat[is.na(data4$weekend)] <- 'weekday'
View(data4)
data4 <- data3
data4$date <- as.POSIXct(data4$date)
data4$wday <- wday(data4$date)
length(which(data4$wday >5))
length(which(data4$wday <= 5))
data4$week.cat[which(data4$wday > 5)] <- 'weekend'
View(data4)
data4$week.cat[is.na(data4$weekend)] <- 'weekday'
data4$week.cat[is.na(data4$week.cat)] <- 'weekday'
View(data4)
str(data4)
data4$week.cat <- as.factor(data4$week.cat)
str(data4)
View(tot.steps.day)
View(tot.steps.day.data3)
View(tot.steps.day)
int.data4 <- data4 %>%
group_by(week.cat, interval) %>%
summarise(mean.steps = mean(steps))
View(int.data4)
?facet
plot5 <- ggplot(int.data4, aes(x = date, y = steps)) +
geom_line() + facet_wrap(~week.cat)
plot5
View(int.data4)
ggplot(int.data4, aes(x = date, y = mean.steps)) +
geom_line() + facet_wrap(~week.cat)
ggplot(int.data4, aes(x = date, y = mean.steps, group = week.cat)) +
geom_line() + facet_wrap(~week.cat)
ggplot(int.data4, aes(x = date, y = mean.steps, group = week.cat)) +
geom_line() + facet_wrap(~week.cat)
ggplot(int.data4, aes(x = date, y = mean.steps)) +
geom_line() + facet_wrap(~week.cat)
table(int.data4$week.cat)
ggplot(int.data4, aes(x = date, y = mean.steps)) +
geom_line() +
facet_wrap(~week.cat)
ggplot(int.data4, aes(x = date, y = mean.steps)) +
geom_line() +
facet_wrap(~week.cat, scales='free_y')
ggplot(int.data4, aes(x = date, y = mean.steps)) +
geom_line() +
facet_wrap(~week.cat, scales='free_y')
ggplot(int.data4, aes(x = date, y = mean.steps, group = 1)) +
geom_line() +
facet_wrap(~week.cat, scales='free_y')
ggplot(int.data4, aes(x = date, y = mean.steps)) +
geom_line() +
facet_wrap(~week.cat, scales='free_y')
ggplot(int.data4, aes(x = date, y = mean.steps)) +
geom_line()
ggplot(int.data4, aes(x = date, y = mean.steps)) +
p <- ggplot(int.data4, aes(x = date, y = mean.steps))
p <- ggplot(int.data4, aes(x = date, y = mean.steps))
p + geom_line()
str(int.data4)
p + geom_line()
p + geom_line() + facet_wrap(~week.cat)
qplot(interval, mean.steps, data = int.data4, facets = .~week.cat)
qplot(interval, mean.steps, data = int.data4, facets = .~week.cat, type = 'l')
p <- ggplot(int.data4, aes(x = interval, y = mean.steps, group = week.cat))
p + geom_line() + facet_wrap(~week.cat)
?grid.arrange
p + geom_line() + facet_wrap(~week.cat, ncol = 1)
